# To get started with security, check out the documentation:
# http://symfony.com/doc/current/book/security.html
security:
    role_hierarchy:
        ROLE_ADMIN:       [ROLE_MODERATEUR]       # Un admin hérite des droits de modérateur
        ROLE_SUPER_ADMIN: [ROLE_ADMIN]
    encoders:
            FOS\UserBundle\Model\UserInterface: bcrypt
    # http://symfony.com/doc/current/book/security.html#where-do-users-come-from-user-providers
    providers:
        fos_userbundle:
                    id: fos_user.user_provider.username
        oauth:
                    id: my_oauth_members
    firewalls:
        # disables authentication for assets and the profiler, adapt it according to your needs

        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:

            pattern: ^/
            form_login:
                login_path: fos_user_security_login
                check_path: fos_user_security_check
                default_target_path: perso_galerie_homepage

            logout:
                path:       fos_user_security_logout
                target:     perso_galerie_homepage
            anonymous: true
            # activate different ways to authenticate

            # http_basic: ~
            # http://symfony.com/doc/current/book/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: ~
            # http://symfony.com/doc/current/cookbook/security/form_login_setup.html

        oauth:
            pattern:    ^/oauth/.*
            anonymous: ~
            provider: oauth
            oauth:
                resource_owners:
                    facebook: "/oauth/login/check-facebook"
                    twitter: "/oauth/login/check-twitter"
                    google: "/oauth/login/check-google"
                login_path: /oauth/login
                failure_path: /oauth/login
                check_path: /oauth/login_check
                default_target_path: /oauth/target
                oauth_user_provider:
                    service: my_oauth_members

    access_control:
            - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
            - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
            - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }
            - { path: ^/admin/, role: ROLE_ADMIN }
            - { path: ^/oauth/target, roles: ROLE_OAUTH_USER }
            - { path: ^/oauth/, roles: IS_AUTHENTICATED_ANONYMOUSLY }
            #- { path: ^/newPic$, role: IS_AUTHENTICATED_FULLY }